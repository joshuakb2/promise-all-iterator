{
  "name": "promise-all-iterator",
  "version": "1.0.0",
  "description": "Takes a finite iterable of promises and returns an async iterable of their results in the order that they finish.",
  "main": "out/index.js",
  "types": "out/index.d.ts",
  "files": ["out/index.js", "out/index.d.ts"],
  "scripts": {
    "make": "tsc",
    "test": "npm run make && cd tests && tsc && node out/index.js",
    "prepare": "npm run make"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joshuakb2/promise-all-iterator.git"
  },
  "keywords": [
    "ts",
    "js",
    "typescript",
    "javascript",
    "promises",
    "iterators",
    "async"
  ],
  "author": "Joshua Baker",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/joshuakb2/promise-all-iterator/issues"
  },
  "homepage": "https://github.com/joshuakb2/promise-all-iterator#readme",
  "devDependencies": {
    "@types/node": "^17.0.10",
    "colors": "^1.4.0",
    "typescript": "^4.5.5"
  }
}
